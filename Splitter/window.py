# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'SplitterData.ui'
#
# Created by: PyQt5 UI code generator 5.15.6
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QFileDialog
import fileworker as fw

class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("Cyrcle Splitter")
        MainWindow.resize(420, 420)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.widget = QtWidgets.QWidget(self.centralwidget)
        self.widget.setGeometry(QtCore.QRect(20, 20, 380, 380))
        self.widget.setObjectName("widget")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.widget)
        self.verticalLayout.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout.setObjectName("verticalLayout")
        self.horizontalLayout = QtWidgets.QHBoxLayout()
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.openfile_button = QtWidgets.QPushButton(self.widget)
        self.openfile_button.setEnabled(True)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.openfile_button.sizePolicy().hasHeightForWidth())
        self.openfile_button.setSizePolicy(sizePolicy)
        self.openfile_button.setMinimumSize(QtCore.QSize(100, 50))
        font = QtGui.QFont()
        font.setFamily("Times New Roman")
        font.setPointSize(14)
        self.openfile_button.setFont(font)
        self.openfile_button.setObjectName("openfile_button")
        self.horizontalLayout.addWidget(self.openfile_button)
        spacerItem = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout.addItem(spacerItem)
        self.splitcyrcle_button = QtWidgets.QPushButton(self.widget)
        self.splitcyrcle_button.setEnabled(False)
        self.splitcyrcle_button.setMinimumSize(QtCore.QSize(100, 50))
        font = QtGui.QFont()
        font.setFamily("Times New Roman")
        font.setPointSize(14)
        self.splitcyrcle_button.setFont(font)
        self.splitcyrcle_button.setObjectName("splitcyrcle_button")
        self.horizontalLayout.addWidget(self.splitcyrcle_button)
        self.verticalLayout.addLayout(self.horizontalLayout)
        self.textEdit = QtWidgets.QTextEdit(self.widget)
        self.textEdit.setObjectName("textEdit")
        self.verticalLayout.addWidget(self.textEdit)
        self.horizontalLayout_2 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_2.setObjectName("horizontalLayout_2")
        self.SaveFile_button = QtWidgets.QPushButton(self.widget)
        self.SaveFile_button.setEnabled(False)
        self.SaveFile_button.setMinimumSize(QtCore.QSize(120, 50))
        font = QtGui.QFont()
        font.setFamily("Times New Roman")
        font.setPointSize(14)
        self.SaveFile_button.setFont(font)
        self.SaveFile_button.setObjectName("SaveFile_button")
        self.horizontalLayout_2.addWidget(self.SaveFile_button)
        spacerItem1 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_2.addItem(spacerItem1)
        self.CleanMemory_button = QtWidgets.QPushButton(self.widget)
        self.CleanMemory_button.setEnabled(False)
        self.CleanMemory_button.setMinimumSize(QtCore.QSize(120, 50))
        font = QtGui.QFont()
        font.setFamily("Times New Roman")
        font.setPointSize(14)
        self.CleanMemory_button.setFont(font)
        self.CleanMemory_button.setObjectName("CleanMemory_button")
        self.horizontalLayout_2.addWidget(self.CleanMemory_button)
        self.verticalLayout.addLayout(self.horizontalLayout_2)
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 331, 21))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.OpenFile_function = QtWidgets.QAction(MainWindow)
        self.OpenFile_function.setObjectName("OpenFile_function")

        self.retranslateUi(MainWindow)
        self.openfile_button.clicked.connect(self.OpenFileFunction)
        self.splitcyrcle_button.clicked.connect(self.SplitCircleFunction)
        self.SaveFile_button.clicked.connect(self.SaveFilefunction)
        self.CleanMemory_button.clicked.connect(self.ClearMemoryFunction)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def OpenFileFunction(self):
        self.textEdit.clear()
        self.im_data = fw.fileworker.showDialogRead(fw)
        self.splitcyrcle_button.setEnabled(True)

    def SplitCircleFunction(self):
        self.SaveFile_button.setEnabled(True)
        index_endcycle = []
        self.cyrcledata = []

        spliteddata = self.im_data.split('\n')
        length = len(spliteddata)
        for i in range(0, length):
            if len(spliteddata[i].strip()) == 0:
                index_endcycle.append(i)
        index_endcycle.pop(-1)
        self.textEdit.append('Індекси циклів = ' + str(index_endcycle))
        index_endcycle.insert(0, 0)
        self.number_of_cycle = len(index_endcycle)-1

        self.textEdit.append('Кількість циклів =' + str(self.number_of_cycle))


        for i in range(0,self.number_of_cycle):
            temp = []
            for j in range(index_endcycle[i], index_endcycle[i+1]):
                temp.append(spliteddata[j])
            temp.pop(0)
            self.cyrcledata.append(temp)

        self.rowprint = []
        numbervalue = []
        for i in range(0, self.number_of_cycle):
            numbervalue.insert(i,len(self.cyrcledata[i]))
        temm = numbervalue[0]

        for i in range(0, self.number_of_cycle):
            if temm<=numbervalue[i]:
                max = numbervalue[i]

        self.textEdit.append('кількість точок в циклі = ' + str(numbervalue))

        for i in range(0,self.number_of_cycle):
            g = int(max) - int(numbervalue[i])
            for j in range(0, int(g)):
                self.cyrcledata[i].append(' \t  \t  \t')

        for j in range(0, max):
            line = " "
            for i in range(0, self.number_of_cycle):
                a = self.cyrcledata[i][j]
                line = line + a + '\t'
            self.rowprint.append(line + '\t')

    def SaveFilefunction(self):
        fw.fileworker.showDialogWrite(fw, self.rowprint)
        self.textEdit.append(str(" \n \n Файл збережено. Натисни  на кнопку Clean Memory"))
        self.CleanMemory_button.setEnabled(True)

    def ClearMemoryFunction(self):

        self.SaveFile_button.setEnabled(False)
        self.CleanMemory_button.setEnabled(False)
        self.rowprint.clear()
        self.cyrcledata.clear()
        self.textEdit.clear()

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "Cyrcle Splitter v.1.0"))
        self.openfile_button.setText(_translate("MainWindow", "Open  File"))
        self.splitcyrcle_button.setText(_translate("MainWindow", "Split Cyrcle"))
        self.SaveFile_button.setText(_translate("MainWindow", "Save New File"))
        self.CleanMemory_button.setText(_translate("MainWindow", "Clean Memory"))
        self.OpenFile_function.setText(_translate("MainWindow", "OpenFile_function"))


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
